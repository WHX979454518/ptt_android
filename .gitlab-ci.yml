image: ubuntu:16.04

variables:
  TEST_APP_SERVER: "http://netptt.cn:20002"
  PROD_APP_SERVER: "http://netptt.cn:10005"
  APK_SERVER_URI: "netptt.cn:/serverDisk/apks"
  APK_OUTPUT_DIR: "app/build/outputs"

before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes curl openjdk-8-jdk lib32stdc++6 lib32z1
  - curl https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz | tar zxf -
  - echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter platform-tools,tools,build-tools-24.0.0,android-24,extra-android-m2repository
  - export ANDROID_HOME=$PWD/android-sdk-linux

stages:
  - build

build test:
  variables:
    APK_NAME: "ctalk-app-test-$CI_BUILD_NUMBER.apk"
    APK_PATH: "$APK_OUTPUT_DIR/apk/$APK_NAME"
  stage: build
  only:
    - develop
  script:
    - ./gradlew -DBUILD_NUMBER="$CI_BUILD_NUMBER" -DBUILD_NAME="internal testing" -DAPP_SERVER_URL="$TEST_APP_SERVER" assembleDevDebug
    - mv $APK_OUTPUT_DIR/apk/app-dev-debug.apk $APK_PATH
    - scp "$APK_PATH" "$APK_SERVER_URI/test/"
  artifacts:
    paths:
    - $APK_PATH
  environment: testing


